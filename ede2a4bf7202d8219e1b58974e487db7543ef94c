{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8f9ecc99_8e958692",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2025-09-17T18:27:32Z",
      "side": 1,
      "message": "I find this quite a convoluted logic: why not simply check if the project exists?",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1747d697_34092d08",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-09-17T18:45:55Z",
      "side": 1,
      "message": "The main reason I don’t just check project existence upfront is that what we really need is the repository’s size, which is obtained through the repository cache.\n\nA separate “exists?” check would still require hitting the same cache or filesystem, so it wouldn’t simplify much imho and could even introduce race conditions (repo created between the existence check and the size lookup).",
      "parentUuid": "8f9ecc99_8e958692",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c830b5b_f56b911a",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2025-09-17T19:47:11Z",
      "side": 1,
      "message": "Have you thought about using `getIfPresent()` and checking for `null` if the value is not in cache?\n\nI guess the problem with `getIfPresent()` is that we won\u0027t be able to understand *why* we have got a `null` back?",
      "parentUuid": "1747d697_34092d08",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a45736c1_f9d4803b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1072905
      },
      "writtenOn": "2025-09-17T20:22:14Z",
      "side": 1,
      "message": "Yes, I did think about using `getIfPresent()`, but that\u0027s not the right API here, because it doesn\u0027t trigger a load and it tells you only that the entry isn\u0027t cached, not whether the repository is missing.",
      "parentUuid": "0c830b5b_f56b911a",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d035cc28_73fb1a7e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2025-09-17T20:33:15Z",
      "side": 1,
      "message": "Ok, so maybe we can just wrap the logic in a method, like: `getOrEmpty()` or something similar.",
      "parentUuid": "a45736c1_f9d4803b",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fa4b91e_07ff0ad4",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2025-09-18T08:09:38Z",
      "side": 1,
      "message": "Perhaps wrapping the check in function that has a clear name would work here?",
      "parentUuid": "d035cc28_73fb1a7e",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 121,
        "endChar": 9
      },
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "795d8825_9f0c27e0",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuotaTest.java",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 1054778
      },
      "writtenOn": "2025-09-17T19:47:11Z",
      "side": 1,
      "message": "Shold we also assert for `availableTokens()` ?\n\nSame comment for the other tests.",
      "revId": "ede2a4bf7202d8219e1b58974e487db7543ef94c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}