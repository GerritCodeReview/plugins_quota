{
  "comments": [
    {
      "key": {
        "uuid": "2481c117_07a41694",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-25T07:45:54Z",
      "side": 1,
      "message": "There is no default expiration time set here. If I followed the guava cache API well then this would end up in maximumSize(0) which means: no caching. One could still set a cache.push_count.maxAge in gerrit.config but it is not nice if it is mandatory to set this parameter in order to enable caching.",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_c70cbecc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T11:47:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2481c117_07a41694",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_47f8ce9b",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T15:15:15Z",
      "side": 1,
      "message": "nit: line too long",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_e609beb9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T11:47:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2481c117_47f8ce9b",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_27f3dac3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T15:15:15Z",
      "side": 1,
      "message": "1. nit: space after \"synchronized\"\n\n2. Use the LoadingCache instead of maintaining a map of locks. The LoadingCache takes care about exactly this issue (concurrent \"loading\" of the initial value).",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_e709c2b9",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T11:47:43Z",
      "side": 1,
      "message": "I didn\u0027t manage to solve the issue to increment the value in a thread safe way by using a LoadingCache. Therefore I do not use it.\n\nWe anyhow do not use a Cache here in its original meaning, namely to cache a value that is expensive to compute and which would be reloaded after cache invalidation. We use a cache beacuse it behaves like a Map with an automated persistence.",
      "parentUuid": "2481c117_27f3dac3",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_e65a9eaa",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-25T13:02:57Z",
      "side": 1,
      "message": "The value is an AtomicLong and the AtomicLong provides thread safe increment.\n\nThis is the reason why AtomicLong is used (and not Long).\n\nLoadingCache helps protecting from 2 threads concurrently creating an initial value. AtomicLong provides thread safe update of the value.\n\nA solution with LoadingCache is simpler as we don\u0027t need to maintain yet another Map (LOCKS).\n\nI would like to see the solution with LoadingCache and why it is not thread safe.",
      "parentUuid": "2481c117_e709c2b9",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_262e761c",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 103,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T13:29:56Z",
      "side": 1,
      "message": "Ah, you are right. I was confused by the fact that getting from the cache and incrementing the value are two steps, but getting from the cache in fact only returns a reference.",
      "parentUuid": "04767d12_e65a9eaa",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_07eed6dc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 108,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T15:15:15Z",
      "side": 1,
      "message": "nit: this should go in the same line as the closing } above:\n\n  } else {",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_c60cc2cc",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 108,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T11:47:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2481c117_07eed6dc",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_86580a0f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T15:15:15Z",
      "side": 1,
      "message": "why remove?",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_074096c3",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1006276
      },
      "writtenOn": "2014-06-25T11:47:43Z",
      "side": 1,
      "message": "Done\n\nYou\u0027re right, that\u0027s not necessary.",
      "parentUuid": "04767d12_86580a0f",
      "revId": "f4596c67eff370de23a8cd34869acb02a1a6d8b8",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}