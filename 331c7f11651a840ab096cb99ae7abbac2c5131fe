{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec76e97b_7e387bf5",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/TaskQuotas.java",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-12-05T00:12:11Z",
      "side": 1,
      "message": "This is not the total permits, it\u0027s only what left. We likely want to store a total as an extra field to make this work right.",
      "range": {
        "startLine": 46,
        "startChar": 16,
        "endLine": 46,
        "endChar": 32
      },
      "revId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e941ef15_20c88234",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/TaskQuotas.java",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 1003883
      },
      "writtenOn": "2019-12-05T00:12:11Z",
      "side": 1,
      "message": "\u003c",
      "range": {
        "startLine": 50,
        "startChar": 14,
        "endLine": 50,
        "endChar": 17
      },
      "revId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68ed795b_44c6c85f",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2019-12-05T10:04:00Z",
      "side": 1,
      "message": "taskConcurrency would be a better name I think\n\nThis configuration option and format look like a first iteration that could work :-)\nI think we need to discuss the configuration more.\nLet me bring some points which came to my mind:\n\n* the quota (sub)section patterns are foreseen to match project names and namespaces\n* the quota sections are scanned top-down and the first section which matches the project\n  (for which quota check is performed) applies. Further sections below are not applied (see\n  lines 77-79 below. This means that this concurrency limit would apply to all project except\n  for those projects matching any of the previous quota sub-sections.\n* the regex used to match task name (a change query in this example?) is not\n  necessarily project specific. Moving this task to any of the quota sections above would\n  be confusing. For example:\n\n  [quota \"public/*\"]\n    taskName \u003d \"gerrit query .*status:merged.*\" 2\n\n  A change-query request is not necessarily project specific.\n  How can we limit (concurrent) change queries for projects whose name matches public/*?\n\nWhat about dedicated section(s) for the concurrency limits:\n\n  [concurrency \"gerrit query .*status:merged.*]\n    limit \u003d 2\n  [concurrency \"gerrit query .*\"]\n    limit \u003d 10\n  [concurrency \".*upload-pack.*big_repo.*\"]\n    limit \u003d 5\n  [concurrency \".*upload-pack.*\"]\n    limit \u003d 20\n\nWith the above configuration we set concurrency limits to:\n* 2 for all queries using an expensive operator (status:merged)\n* 10 as an overall limit for queries\n* 5 upload-pack for a big repository\n* 20 upload-pack operations overall\n\nHere we likely want to apply all matching sections? For example if we have to process\na query like \"branch:master status:merged owner:self\" then this request should be\nsubject of the first two concurrency limits (as both of them match).\n\nBtw, how do Gerrit admins find the task names? From the show-queue command output?",
      "range": {
        "startLine": 25,
        "startChar": 4,
        "endLine": 25,
        "endChar": 12
      },
      "revId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69fe7ad2_04a710db",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1004034
      },
      "writtenOn": "2019-12-05T00:27:12Z",
      "side": 1,
      "message": "I\u0027d add also \"upload-pack\" as an example here since it is probably the most important task type which may need limiting to avoid overloading a Gerrit server",
      "revId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["hashtag:allow-unresolved-comments"],"atomExplanations":{"value":{"hashtag:allow-unresolved-comments":""}}}
      },
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Verified=MAX","label:Verified=MIN"],"atomExplanations":{"value":{"label:Verified=MAX":"","label:Verified=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Want-Code-Review-From-All",
        "description": {
          "value": "A \u0027Code-Review\u0027 vote is required from all human reviewers (service users that are reviewers are ignored)."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "footer:\"Want-Code-Review: all\" -label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"footer:\"Want-Code-Review: all\" -label:Code-Review>=1,users=human_reviewers"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["footer:\"Want-Code-Review: all\"","label:Code-Review>=1,users=human_reviewers"],"atomExplanations":{"value":{"footer:\"Want-Code-Review: all\"":"","label:Code-Review>=1,users=human_reviewers":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review>=1,users=human_reviewers"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "331c7f11651a840ab096cb99ae7abbac2c5131fe",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}