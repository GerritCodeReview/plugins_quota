{
  "comments": [
    {
      "key": {
        "uuid": "2481c117_074fb67d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: empty line above",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_2754ba0d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "@Singleton",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_674eb27f",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 85,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: line too long",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_2654b60d",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: line too long",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_c73cbede",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: curly braces even for single statment blocks",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_e739c2eb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 99,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: curly braces even for single statment blocks",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_a73fcad0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/FetchAndPushCounter.java",
        "patchSetId": 7
      },
      "lineNbr": 100,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "This is not thread safe. For example, when the value for a project is not present then two concurrent threads (who want to increase the counter for the same project) may both end up in the else block and we will have the value 1 instead of 2.",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 100,
        "endChar": 44
      },
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_a63fc6d0",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "nit: unnecessary empty line, remove",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_e639beeb",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/MaxRepositorySizeQuota.java",
        "patchSetId": 7
      },
      "lineNbr": 136,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:25:38Z",
      "side": 1,
      "message": "This seems to be copied from the MaxRepositorySizeQuota. Could we refactor it and have it in one place only?",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_8783a644",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 127,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:43:01Z",
      "side": 1,
      "message": "nit: this formatting is incorrect. A line this continues the previous line should be indented by two levels.",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 127,
        "endChar": 33
      },
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_a69b4690",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 168,
      "author": {
        "id": 1007114
      },
      "writtenOn": "2014-06-24T13:38:31Z",
      "side": 1,
      "message": "this is not specific for push any longer -\u003e \"count\" or \"metaData\"",
      "range": {
        "startLine": 168,
        "startChar": 41,
        "endLine": 168,
        "endChar": 50
      },
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_c6984296",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 168,
      "author": {
        "id": 1007114
      },
      "writtenOn": "2014-06-24T13:38:31Z",
      "side": 1,
      "message": "could be static, I think",
      "range": {
        "startLine": 168,
        "startChar": 2,
        "endLine": 168,
        "endChar": 9
      },
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_e78aa254",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:43:01Z",
      "side": 1,
      "message": "s/ifPresent/count\n\nor\n\ns/ifPresent/cachedCounter",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2481c117_07597635",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 174,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:43:01Z",
      "side": 1,
      "message": "concurrency issue: an increment to the AtomicLong, done from another thread between the 173-174, for the same project p can be lost by the invalidate(p).\n\nInstead of invalidating the cache entry a thread safe way could be to use p.getAndSet(0) in the line 173. In that case you would also like to change the if condition and also exclude the case when the counter is zero.",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04767d12_267596a6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/quota/Publisher.java",
        "patchSetId": 7
      },
      "lineNbr": 180,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2014-06-24T11:43:01Z",
      "side": 1,
      "message": "nit: space before {",
      "revId": "eb62cd205efc15b409c847a2755368643a63dcfc",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}